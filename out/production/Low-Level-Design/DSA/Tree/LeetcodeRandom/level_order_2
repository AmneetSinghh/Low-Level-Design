BFS Without Reversing Vector

int Height(TreeNode*root){
      if(!root)return 0;
      return 1+max(Height(root->left),Height(root->right));
  }
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        int d=Height(root);
        vector<vector<int>>ans(d);
        d--;
        if(!root)return ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
           int sz=q.size();
           vector<int>v;
           while(sz--){
               TreeNode * f=q.front();
               v.push_back(q.front()->val);
               q.pop();
               if(f->left)q.push(f->left);
               if(f->right)q.push(f->right);

           }
           ans[d--]=v;
        }
        return ans;
    }


    // We are finding the depth So that we can make the vector of that size.