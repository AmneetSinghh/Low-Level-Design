class Payment{
    void function(){
            new Stripe.makePayment();
    }
}


class Stripe{
    void makePayment();
}

// payemnt classes depends on stripe, if we want to introduce paypal we need to change payment function


// solution : 

class Payment{
    void function(){
            new paymentProcessor.payment();
    }
}

interface PaymentProcessor{
    makePayment();
    makeArtitect();
}

class Stripe extends paymentProcessor{
    void makePayment();
    makeArtitect();
    void getPayment();
    doSomething();
}



class paypal extends paymentProcessor{
    void makePayment();
    makeArtitect();
    void getPayment();
    doSomething();
}


// payment - high level moduele depend on abstract, payment processor.
/// low level module - paypal/stripe depend on paymentProcessor, so doesn't matter what things we change in low level modules, only that function will get exposed
/// to high level modules, the fucntions which writen in paymentProcessor/abstraction.

